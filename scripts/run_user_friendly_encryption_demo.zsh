#!/usr/bin/env zsh

# Script to run the User-Friendly Encryption API Demo
# Usage: ./run_user_friendly_encryption_demo.zsh
# Version: 1.0.0

# Set script directory and navigate to project root
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
cd "$SCRIPT_DIR/.."

# Load common functions library
source "${SCRIPT_DIR}/lib/common_functions.zsh"

print_header "üîê USER-FRIENDLY ENCRYPTION API DEMO RUNNER"
print_info "Project directory: $(pwd)"
print_info ""

# Check if we're in the correct directory
check_project_directory

# Check prerequisites
if ! check_java || ! check_maven; then
    exit 1
fi

# Clean and compile
cleanup_database

if ! compile_project; then
    exit 1
fi

# Run the User-Friendly Encryption API Demo
print_info "üé¨ Running User-Friendly Encryption API Demo..."
print_step "==============================================="
print_info ""
print_info "This demo showcases practical encrypted blockchain operations:"
print_info "‚Ä¢ Easy storage of different types of encrypted data"
print_info "‚Ä¢ Automatic user management and key generation"
print_info "‚Ä¢ Privacy-preserving metadata search"
print_info "‚Ä¢ Secure retrieval with password protection"
print_info "‚Ä¢ Advanced search with decryption capabilities"
print_info "‚Ä¢ Unified search across encrypted and public data"
print_info "‚Ä¢ Blockchain validation and integrity checking"
print_info ""

mvn exec:java -Dexec.mainClass="demo.UserFriendlyEncryptionDemo" -q
DEMO_RESULT=$?
print_info ""

# Run related tests to validate functionality
print_info "üß™ Running User-Friendly Encryption API Tests..."
print_step "==============================================="
print_info ""
mvn test -Dtest=UserFriendlyEncryptionAPITest -q
TEST_RESULT=$?
print_info ""

# Summary
print_step "üìä USER-FRIENDLY ENCRYPTION API SUMMARY"
print_step "========================================"

if [ $DEMO_RESULT -eq 0 ]; then
    print_success "‚úÖ User-Friendly Encryption API Demo: COMPLETED"
else
    print_error "‚ùå User-Friendly Encryption API Demo: FAILED"
fi

if [ $TEST_RESULT -eq 0 ]; then
    print_success "‚úÖ User-Friendly Encryption API Tests: PASSED"
else
    print_error "‚ùå User-Friendly Encryption API Tests: FAILED"
fi

if [ $DEMO_RESULT -eq 0 ] && [ $TEST_RESULT -eq 0 ]; then
    print_info ""
    print_info "üìã Summary of what was demonstrated:"
    print_info "   ‚Ä¢ Storing medical, financial, and legal encrypted data"
    print_info "   ‚Ä¢ Generating secure passwords and managing users"
    print_info "   ‚Ä¢ Privacy-preserving search without content disclosure"
    print_info "   ‚Ä¢ Password-based content search and retrieval"
    print_info "   ‚Ä¢ Unified search across mixed blockchain data"
    print_info "   ‚Ä¢ Comprehensive validation and integrity checking"
    print_info ""
    print_info "üí° Next steps:"
    print_info "   ‚Ä¢ Run './run_encryption_config_demo.zsh' for configuration options"
    print_info "   ‚Ä¢ Review docs/ENCRYPTION_GUIDE.md for detailed documentation"
    print_info "   ‚Ä¢ Explore advanced search with 'scripts/run_revolutionary_search_demo.zsh'"
    print_info "   ‚Ä¢ Check all encryption tests with 'mvn test -Dtest=*Encryption*'"
else
    error_exit "Some tests or demos failed. Check the output above for details."
fi

print_info ""
print_info "üîç API Features Demonstrated:"
print_info "  ‚Ä¢ üè• Medical Records: storeMedicalRecord(), findMedicalRecords()"
print_info "  ‚Ä¢ üí∞ Financial Data: storeFinancialRecord(), findFinancialRecords()"
print_info "  ‚Ä¢ ‚öñÔ∏è Legal Documents: storeLegalDocument(), findLegalDocuments()"
print_info "  ‚Ä¢ üîê Generic Secrets: storeSecret(), retrieveSecret()"
print_info "  ‚Ä¢ üîç Privacy Search: findEncryptedData(), searchEverything()"
print_info "  ‚Ä¢ üîì Content Search: findAndDecryptData(), searchEverythingWithPassword()"
print_info "  ‚Ä¢ üë§ User Management: createUser(), setDefaultCredentials()"
print_info "  ‚Ä¢ üõ°Ô∏è Security: generateSecurePassword(), validateEncryptedBlocks()"
print_info ""

# Final cleanup
cleanup_database

print_success "üéâ User-Friendly Encryption API Demo completed successfully!"
exit 0